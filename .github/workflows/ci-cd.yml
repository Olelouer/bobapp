name: CI/CD for BobApp

on:
  push:
    branches: [ main, dev/* ]
  pull_request:
    branches: [ main, dev/* ]

jobs:
  # --- Check frontend and backend changes ---
  filter:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Paths Filter
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend:
              - 'back/**'
            frontend:
              - 'front/**'

  # --- BACKEND CI JOB ---
  backend:
    name: Backend - Build, tests, analysis
    runs-on: ubuntu-latest
    needs: filter
    if: needs.filter.outputs.backend == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build, Test, and Analyze with Maven
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify sonar:sonar
        working-directory: ./back

      - name: Upload JaCoCo report artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: jacoco-report
          path: back/target/site/jacoco

  # --- FRONTEND CI JOB ---
  frontend:
    name: Frontend - Build, test, analysis
    runs-on: ubuntu-latest
    needs: filter
    if: needs.filter.outputs.frontend == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: front/package-lock.json

      - name: Install dependencies
        run: npm install
        working-directory: ./front

      - name: Run Unit tests
        run: npm test -- --no-watch --no-progress --browsers=ChromeHeadless --code-coverage
        working-directory: ./front

      - name: Upload Angular coverage artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: angular-coverage-report
          path: front/coverage

      - name: SonarCloud Scan - Frontend
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          projectBaseDir: ./front
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io

  # --- BACKEND CD JOB ---
  backend-cd:
    name: Backend - Docker Image
    runs-on: ubuntu-latest
    needs: backend
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./back
          push: false
          load: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-backend:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-backend:latest

      - name: Scan Image with Trivy
        uses: aquasecurity/trivy-action@0.32.0
        with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/bobapp-backend:${{ github.sha }}'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Push Docker Image
        run: docker push --all-tags ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-backend

  # --- FRONTEND CD JOB ---
  frontend-cd:
    name: Frontend - Docker Image
    runs-on: ubuntu-latest
    needs: frontend
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./front
          push: false
          load: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-frontend:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-frontend:latest

      - name: Scan Image with Trivy
        uses: aquasecurity/trivy-action@0.32.0
        with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/bobapp-frontend:${{ github.sha }}'
          format: 'table'
          exit-code: '0'
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Push Docker Image
        run: docker push --all-tags ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-frontend